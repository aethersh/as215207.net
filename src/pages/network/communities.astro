---
import Links from "../../components/Links.astro";
import Pride from "../../components/Pride.astro";
import TopNav from "../../components/TopNav.astro";
import RootLayout from "../../layouts/RootLayout.astro";

import { ASN } from "../../utils/constants";

const INFO_COMMUNITIES = {
  "0:100": "from Self",
  "100:80": "from Transit",
  "100:90": "from IXP RS",
  "100:100": "from Peer",
  "100:200": "from Downstream",
  "120:$ASN": "from $ASN",
};

const infoCommunties = Object.entries(INFO_COMMUNITIES).map(
  ([community, description]) => ({
    community: `${ASN}:${community}`,
    description,
  })
);

/* ------------ IXP Communities ------------ */

const IXP_COMMUNITY_PREFIX = `${ASN}:160`;

const IXP_ASNS = [
  { asn: 209643, ixp: "Locix NL" },
  { asn: 202409, ixp: "Locix DÜS" },
  { asn: 202409, ixp: "Locix FRA" },
  { asn: 62768, ixp: "NVIX" },
  { asn: 57369, ixp: "ONIX" },
  { asn: 57369, ixp: "FREMIX" },
  { asn: 36090, ixp: "F4IX MCI" },
  { asn: 47498, ixp: "FogIXP" },
];

const ixpCommunities = IXP_ASNS.map(({ asn, ixp }) => ({
  community: `${IXP_COMMUNITY_PREFIX}:${asn}`,
  description: `${ixp}`,
}));

/* ------------ Location Communities ------------ */

const LOCATION_COMMUNITY_PREFIX = `${ASN}:140`;

const LOCATION_COMMUNITIES = {
  "10840": { iso3166: "840", description: "Virginia, US" },
  "11840": { iso3166: "840", description: "New York, US" },
  "14840": { iso3166: "840", description: "Vermont, US" },
  "31840": { iso3166: "840", description: "California, US" },
  "34840": { iso3166: "840", description: "Kansas City, US" },
  "4124": {
    iso3166: "124",
    description: "Ontario, CA",
  },
  "2124": {
    iso3166: "124",
    description: "Quebec, CA",
  },
  "5124": {
    iso3166: "124",
    description: "British Columbia, CA",
  },
  "1276": {
    iso3166: "276",
    description: "North Rhine-Westphalia (Düsseldorf) Germany",
  },
  "5276": { iso3166: "276", description: "Hesse (Frankfurt) Germany" },
  "528": { iso3166: "528", description: "Netherlands" },
  "756": { iso3166: "756", description: "Switzerland" },
};

const locationCommunities = Object.entries(LOCATION_COMMUNITIES).map(
  ([id, communityInfo]) => ({
    community: `${LOCATION_COMMUNITY_PREFIX}:${id}`,
    ...communityInfo,
  })
);
---

<RootLayout title="Network | AS215207">
  <div
    class="w-screen min-h-screen overflow-x-hidden flex flex-col items-center justify-start"
  >
    <main
      class="flex flex-col items-start md:px-4 px-2 pt-4 md:pt-0 max-w-3xl md:w-3xl w-screen font-mono"
    >
      <TopNav page="communities" />
      <h1 class="text-3xl font-medium text-center w-full">Communities</h1>
      <h2 class="text-xl text-center w-full pt-2">AS215207</h2>
      <div
        class="w-full space-y-2 prose-base prose-table:prose prose-table:prose-invert"
      >
        We exclusively use BGP Large Communities, as defined in <a
          href="https://datatracker.ietf.org/doc/rfc8092/"
          target="_blank">IETF RFC 8092</a
        >.

        <section>
          <h3>Info Communities</h3>
          <table>
            <thead
              ><tr><th class="w-44">Community</th><th>Learned</th></tr></thead
            >
            <tbody
              >{
                infoCommunties.map((e) => (
                  <tr>
                    <td>
                      <code>{e.community}</code>
                    </td>
                    <td>{e.description}</td>
                  </tr>
                ))
              }</tbody
            >
          </table>
        </section>
        <section>
          <h3>IXP Communities</h3>
          <p></p>
          <table>
            <thead><tr><th class="w-44">Community</th><th>IXP</th></tr></thead>
            <tbody
              >{
                ixpCommunities.map((e) => (
                  <tr>
                    <td>
                      <code>{e.community}</code>
                    </td>
                    <td>{e.description}</td>
                  </tr>
                ))
              }</tbody
            >
          </table>
        </section>

        <section>
          <h3>Location Communities</h3>
          <p>
            Communities are based on ISO-3166-1 country codes, along with an
            optional prefix.
          </p>
          <table class="w-full">
            <thead class="w-full"
              ><tr class="w-full"
                ><th class="w-44">Community</th><th>ISO-3166-1</th><th
                  class="w-fit">Learned in</th
                ></tr
              ></thead
            >
            <tbody
              >{
                locationCommunities.map((e) => (
                  <tr>
                    <td>
                      <code>{e.community}</code>
                    </td>
                    <td>{e.iso3166}</td>
                    <td>{e.description}</td>
                  </tr>
                ))
              }</tbody
            >
          </table>
        </section>
      </div>

      <Links />

      <Pride />

      <span class="w-full inline-flex justify-center pt-4"
        ><a href="https://github.com/aethersh/as215207.net">see source code</a
        ></span
      >
    </main>
  </div>
</RootLayout>
